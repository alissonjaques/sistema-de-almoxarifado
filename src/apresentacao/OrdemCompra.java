/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import modelo.Fornecedor;
import modelo.OrdemDeCompra;
import modelo.Peca;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * @author Alisson Jaques
 */
public class OrdemCompra extends javax.swing.JInternalFrame {

    private List<OrdemDeCompra> listaDeOrdensDeCompra;
    private List<Fornecedor> listaDeFornecedores;
    private OrdemDeCompra umaOrdem;
    private ArrayList<Peca> listaDePecas;
    private List<Integer> quantidadePorPeca;
    private int vetorQuantidadePorPeca[];
    private boolean alterar;

    /**
     * Creates new form OrdemCompra
     *
     * @param listaDeOrdensDeCompra
     */
    public OrdemCompra(List<OrdemDeCompra> listaDeOrdensDeCompra, List<Fornecedor> listaDeFornecedores) {
        this.listaDeOrdensDeCompra = listaDeOrdensDeCompra;
        this.listaDeFornecedores = listaDeFornecedores;
        umaOrdem = new OrdemDeCompra();
        listaDePecas = new ArrayList<>();
        quantidadePorPeca = new ArrayList<>();
        alterar = false;
        initComponents();
    }

    private boolean validarDadosOrdem() {

        boolean ret = true;

        if (getJftCnpjOC().getText().equals("  .   .   /    -  ")) {
            ret = false;
        } else if (getJtfCodigoDaOrdem().getText().isEmpty()) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes à ordem de compra.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
        }

        return ret;

    }

    private boolean validarDadosFinalizarCompra() {
        boolean ret = true;

        if (getJftCnpjOC().getText().equals("  .   .   /    -  ")) {
            ret = false;
        } else if (getJtfCodigoDaOrdem().getText().isEmpty()) {
            ret = false;
        } else if (getJtItensCompraOC().getRowCount() == 0) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes à ordem de compra.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
        }

        return ret;
    }

    private void limparCampos() {
        getJftCnpjOC().setText("");
        getJtRazaoOC().setText("");
        getJtfCodigoDaOrdem().setText("");
        getJftCnpjOC().setEnabled(true);
        getJtfCodigoDaOrdem().setEnabled(true);
        getJbOkOC().setEnabled(true);
        limparCamposPeca();
        limparTabelaPecas();
        listaDePecas = new ArrayList<>();
        quantidadePorPeca = new ArrayList<>();
    }

    private void limparTabelaPecas() {
        DefaultTableModel model = (DefaultTableModel) getJtItensCompraOC().getModel();
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }

    private boolean validarDadosPeca() {

        boolean ret = true;

        if (getJtCodBarrasOC().getText().isEmpty()) {
            ret = false;
        } else if (getJtDescricaoOC().getText().isEmpty()) {
            ret = false;
        } else if (getJtQuantidadeOC().getText().isEmpty()) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes ao produto.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
        }

        return ret;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpInfoFornecedorOC = new javax.swing.JPanel();
        jlCnpjOC = new javax.swing.JLabel();
        jlRazaoOC = new javax.swing.JLabel();
        jbOkOC = new javax.swing.JButton();
        jtRazaoOC = new javax.swing.JTextField();
        jftCnpjOC = new javax.swing.JFormattedTextField();
        jlCodigoDaOrdem = new javax.swing.JLabel();
        jtfCodigoDaOrdem = new javax.swing.JTextField();
        jpInfoProdutosOC = new javax.swing.JPanel();
        jlDescricaoOC = new javax.swing.JLabel();
        jlQuantidadeOC = new javax.swing.JLabel();
        jlCodBarrasOC = new javax.swing.JLabel();
        jbAdicionarOC = new javax.swing.JButton();
        jtCodBarrasOC = new javax.swing.JTextField();
        jtDescricaoOC = new javax.swing.JTextField();
        jtQuantidadeOC = new javax.swing.JTextField();
        jbLimparOC2 = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jpItensCompraOC = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtItensCompraOC = new javax.swing.JTable();
        jbSairOC = new javax.swing.JButton();
        jbFinalizarCompraOC = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("ORDEM DE COMPRA DE PRODUTOS");
        setPreferredSize(new java.awt.Dimension(568, 595));

        jpInfoFornecedorOC.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES DA ORDEM DE COMPRA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jlCnpjOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCnpjOC.setText("CNPJ Fornecedor:");

        jlRazaoOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlRazaoOC.setText("Razão Social:");

        jbOkOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbOkOC.setText("OK");
        jbOkOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkOCActionPerformed(evt);
            }
        });

        jtRazaoOC.setEnabled(false);
        jtRazaoOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtRazaoOCActionPerformed(evt);
            }
        });

        try {
            jftCnpjOC.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftCnpjOC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftCnpjOCFocusLost(evt);
            }
        });
        jftCnpjOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftCnpjOCActionPerformed(evt);
            }
        });

        jlCodigoDaOrdem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCodigoDaOrdem.setText("Código da Ordem:");

        jtfCodigoDaOrdem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoDaOrdemActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInfoFornecedorOCLayout = new javax.swing.GroupLayout(jpInfoFornecedorOC);
        jpInfoFornecedorOC.setLayout(jpInfoFornecedorOCLayout);
        jpInfoFornecedorOCLayout.setHorizontalGroup(
            jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoFornecedorOCLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlRazaoOC)
                    .addComponent(jlCnpjOC)
                    .addComponent(jlCodigoDaOrdem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftCnpjOC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtRazaoOC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodigoDaOrdem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoFornecedorOCLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbOkOC, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );
        jpInfoFornecedorOCLayout.setVerticalGroup(
            jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoFornecedorOCLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCnpjOC)
                    .addComponent(jftCnpjOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlRazaoOC)
                    .addComponent(jtRazaoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodigoDaOrdem)
                    .addComponent(jtfCodigoDaOrdem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbOkOC)
                .addContainerGap())
        );

        jpInfoProdutosOC.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES PRODUTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jlDescricaoOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlDescricaoOC.setText("Descrição:");

        jlQuantidadeOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlQuantidadeOC.setText("Quantidade:");

        jlCodBarrasOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCodBarrasOC.setText("Codigo de Barras:");

        jbAdicionarOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbAdicionarOC.setText("ADICIONAR");
        jbAdicionarOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarOCActionPerformed(evt);
            }
        });

        jbLimparOC2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbLimparOC2.setText("LIMPAR");
        jbLimparOC2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparOC2ActionPerformed(evt);
            }
        });

        jbEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbEditar.setText("EDITAR");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbExcluir.setText("EXCLUIR");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInfoProdutosOCLayout = new javax.swing.GroupLayout(jpInfoProdutosOC);
        jpInfoProdutosOC.setLayout(jpInfoProdutosOCLayout);
        jpInfoProdutosOCLayout.setHorizontalGroup(
            jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoProdutosOCLayout.createSequentialGroup()
                .addComponent(jbAdicionarOC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jlQuantidadeOC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtQuantidadeOC, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))
                    .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbLimparOC2)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoProdutosOCLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlCodBarrasOC)
                    .addComponent(jlDescricaoOC))
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtDescricaoOC, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoProdutosOCLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jtCodBarrasOC, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpInfoProdutosOCLayout.setVerticalGroup(
            jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                        .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlCodBarrasOC)
                            .addComponent(jtCodBarrasOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlDescricaoOC)
                            .addComponent(jtDescricaoOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlQuantidadeOC)
                        .addComponent(jtQuantidadeOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22)
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdicionarOC)
                    .addComponent(jbLimparOC2)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpItensCompraOC.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ITENS DA COMPRA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jtItensCompraOC.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO DE BARRAS", "DESCRIÇÃO", "QUANTIDADE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtItensCompraOC.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtItensCompraOCFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtItensCompraOCFocusLost(evt);
            }
        });
        jtItensCompraOC.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtItensCompraOCMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtItensCompraOC);
        if (jtItensCompraOC.getColumnModel().getColumnCount() > 0) {
            jtItensCompraOC.getColumnModel().getColumn(0).setPreferredWidth(15);
            jtItensCompraOC.getColumnModel().getColumn(1).setPreferredWidth(200);
            jtItensCompraOC.getColumnModel().getColumn(2).setPreferredWidth(5);
        }

        jbSairOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbSairOC.setText("SAIR");
        jbSairOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairOCActionPerformed(evt);
            }
        });

        jbFinalizarCompraOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbFinalizarCompraOC.setText("FINALIZAR COMPRA");
        jbFinalizarCompraOC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFinalizarCompraOCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpItensCompraOCLayout = new javax.swing.GroupLayout(jpItensCompraOC);
        jpItensCompraOC.setLayout(jpItensCompraOCLayout);
        jpItensCompraOCLayout.setHorizontalGroup(
            jpItensCompraOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpItensCompraOCLayout.createSequentialGroup()
                .addGap(310, 310, 310)
                .addComponent(jbFinalizarCompraOC)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSairOC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpItensCompraOCLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jpItensCompraOCLayout.setVerticalGroup(
            jpItensCompraOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpItensCompraOCLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpItensCompraOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbFinalizarCompraOC)
                    .addComponent(jbSairOC))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpItensCompraOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpInfoProdutosOC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpInfoFornecedorOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpInfoFornecedorOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jpInfoProdutosOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpItensCompraOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbAdicionarOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarOCActionPerformed
        if (validarDadosPeca()) {
            Peca peca = new Peca();
            peca.setCodigoDeBarrasUpc(getJtCodBarrasOC().getText());

            int i = 0;
            int index = -1;
            for (Peca peca1 : getListaDePecas()) {
                if (peca1.getCodigoDeBarrasUpc().equals(peca.getCodigoDeBarrasUpc())) {
                    index = i;
                }
                i++;
            }

            if (index > -1) {
                if (!alterar) {
                    JOptionPane.showMessageDialog(this, "Já existe uma peça com esse código de barras!", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    peca = getListaDePecas().get(index);
                }
            }

            peca.setDescricao(getJtDescricaoOC().getText());
            int quantidade;

            try {
                quantidade = Integer.parseInt(getJtQuantidadeOC().getText());
            } catch (NumberFormatException ex) {
                quantidade = 1;
            }

            DefaultTableModel model = (DefaultTableModel) getJtItensCompraOC().getModel();

            String msg = "";
            if (!alterar) {
                msg = "Peça adicionada com sucesso!";
                getListaDePecas().add(peca);
                getQuantidadePorPeca().add(quantidade);
                model.addRow(new Object[]{peca.getCodigoDeBarrasUpc(), peca.getDescricao(), quantidade});
            } else {
                msg = "Alteração cadastral da peça realizada com sucesso!";
                model.setValueAt(peca.getDescricao(), index, 1);
                model.setValueAt(quantidade, index, 2);
            }

            JOptionPane.showMessageDialog(this, msg, "Confirmação", JOptionPane.INFORMATION_MESSAGE);
            limparCamposPeca();
            System.out.println(getListaDePecas());
        }
    }//GEN-LAST:event_jbAdicionarOCActionPerformed

    private void jftCnpjOCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftCnpjOCFocusLost
        String cnpj = getJftCnpjOC().getText();
        boolean controlador = false;
        for (Fornecedor fornecedor : getListaDeFornecedores()) {
            if (fornecedor.getCnpj().equals(cnpj)) {
                controlador = true;
                getJtRazaoOC().setText(fornecedor.getRazaoSocial());
                getJtfCodigoDaOrdem().requestFocus();
            }
        }
        if (!controlador) {
            if (!cnpj.equals("  .   .   /    -  ")) {
                JOptionPane.showMessageDialog(this, "Fornecedor inválido! Favor inserir um CNPJ cadastrado no sistema.", "CNPJ inválido", JOptionPane.ERROR_MESSAGE);
                getJftCnpjOC().requestFocus();
            }
        }
    }//GEN-LAST:event_jftCnpjOCFocusLost

    private void jftCnpjOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftCnpjOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftCnpjOCActionPerformed

    private void jbOkOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkOCActionPerformed
        if (validarDadosOrdem()) {
            getJftCnpjOC().setEnabled(false);
            getJtfCodigoDaOrdem().setEnabled(false);
            getJbOkOC().setEnabled(false);

            Fornecedor fornecedor = new Fornecedor();
            String cnpj = getJftCnpjOC().getText();

            for (Fornecedor fornecedor1 : getListaDeFornecedores()) {
                if (cnpj.equals(fornecedor1.getCnpj())) {
                    fornecedor = fornecedor1;
                }
            }

            getUmaOrdem().setFornecedor(fornecedor);
            getUmaOrdem().setCodigoDaOrdem(getJtfCodigoDaOrdem().getText());
        }
    }//GEN-LAST:event_jbOkOCActionPerformed

    private void jtRazaoOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtRazaoOCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtRazaoOCActionPerformed

    private void jtfCodigoDaOrdemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoDaOrdemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoDaOrdemActionPerformed

    private void jbSairOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairOCActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo sair do pedido de ordem de compra?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            dispose();
        }
    }//GEN-LAST:event_jbSairOCActionPerformed

    private void jbLimparOC2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparOC2ActionPerformed
        limparCamposPeca();
    }//GEN-LAST:event_jbLimparOC2ActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        alterarPeca();
    }//GEN-LAST:event_jbEditarActionPerformed

    private void alterarPeca() {
        DefaultTableModel model = (DefaultTableModel) getJtItensCompraOC().getModel();
        String codigoDeBarras = (String) model.getValueAt(getJtItensCompraOC().getSelectedRow(), 0);

        Peca peca = new Peca();
        peca.setCodigoDeBarrasUpc(codigoDeBarras);

        int i = 0;
        int index = -1;
        for (Peca peca1 : getListaDePecas()) {
            if (peca1.getCodigoDeBarrasUpc().equals(codigoDeBarras)) {
                index = i;
            }
            i++;
        }

        if (index > -1) {
            peca = getListaDePecas().get(index);
            preencherCampos(peca, index);
            alterar = true;
            getJbEditar().setEnabled(false);
            getJbExcluir().setEnabled(false);
            getJtItensCompraOC().setEnabled(false);
        }
    }

    private void preencherCampos(Peca peca, int index) {
        getJtCodBarrasOC().setText(peca.getCodigoDeBarrasUpc());
        getJtCodBarrasOC().setEnabled(false);
        getJtDescricaoOC().setText(peca.getDescricao());
        getJtQuantidadeOC().setText(getQuantidadePorPeca().get(index) + "");
    }


    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir a peça selecionada?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            excluirPeca();
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void excluirPeca() {
        DefaultTableModel model = (DefaultTableModel) getJtItensCompraOC().getModel();
        String codigoDeBarras = (String) model.getValueAt(getJtItensCompraOC().getSelectedRow(), 0);

        int i = 0;
        int index = -1;
        for (Peca peca : getListaDePecas()) {

            if (peca.getCodigoDeBarrasUpc().equals(codigoDeBarras)) {
                index = i;
            }
            i++;
        }

        if (index > -1) {
            getListaDePecas().remove(index);
            getQuantidadePorPeca().remove(index);
            model.removeRow(getJtItensCompraOC().getSelectedRow());
            JOptionPane.showMessageDialog(this, "Peça excluída com sucesso!", "Confirmação de exclusão", JOptionPane.INFORMATION_MESSAGE);
            limparCamposPeca();
        }
    }

    private void jtItensCompraOCFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtItensCompraOCFocusGained
        if (getJtItensCompraOC().getSelectedRow() > -1) {
            getJbEditar().setEnabled(true);
            getJbExcluir().setEnabled(true);
        }
    }//GEN-LAST:event_jtItensCompraOCFocusGained

    private void jtItensCompraOCFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtItensCompraOCFocusLost
        if (getJtItensCompraOC().getSelectedRow() < 0) {
            getJbEditar().setEnabled(false);
            getJbExcluir().setEnabled(false);
        }
    }//GEN-LAST:event_jtItensCompraOCFocusLost

    private void jtItensCompraOCMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtItensCompraOCMouseClicked
        if (evt.getClickCount() == 2) {
            if (getJtItensCompraOC().getSelectedRow() > - 1) {
                alterarPeca();
            }
        }
    }//GEN-LAST:event_jtItensCompraOCMouseClicked

    private void jbFinalizarCompraOCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFinalizarCompraOCActionPerformed
        if (validarDadosFinalizarCompra()) {
            int i = 0;
            vetorQuantidadePorPeca = new int[getQuantidadePorPeca().size()];
            for (Integer vetor : getQuantidadePorPeca()) {
                vetorQuantidadePorPeca[i] = vetor;
                i++;
            }
            getUmaOrdem().setPecasOrdemDeCompra(getListaDePecas());
            getUmaOrdem().setQuantidadePorPeca(vetorQuantidadePorPeca);
            getListaDeOrdensDeCompra().add(umaOrdem.clone());
            System.out.println(umaOrdem.clone());
            JOptionPane.showMessageDialog(this, "Ordem de Compra registrada com sucesso!", "Confirmação de Registro Ordem de Compra", JOptionPane.INFORMATION_MESSAGE);
            System.out.println(getListaDeOrdensDeCompra());
            limparCampos();
        }
    }//GEN-LAST:event_jbFinalizarCompraOCActionPerformed

    private void limparCamposPeca() {
        getJtCodBarrasOC().setText("");
        getJtDescricaoOC().setText("");
        getJtQuantidadeOC().setText("");
        getJtCodBarrasOC().setEnabled(true);
        getJbEditar().setEnabled(false);
        getJbExcluir().setEnabled(false);
        getJtItensCompraOC().setEnabled(true);
        getJtItensCompraOC().getSelectionModel().removeSelectionInterval(0, getJtItensCompraOC().getRowCount());
        alterar = false;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbAdicionarOC;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFinalizarCompraOC;
    private javax.swing.JButton jbLimparOC2;
    private javax.swing.JButton jbOkOC;
    private javax.swing.JButton jbSairOC;
    private javax.swing.JFormattedTextField jftCnpjOC;
    private javax.swing.JLabel jlCnpjOC;
    private javax.swing.JLabel jlCodBarrasOC;
    private javax.swing.JLabel jlCodigoDaOrdem;
    private javax.swing.JLabel jlDescricaoOC;
    private javax.swing.JLabel jlQuantidadeOC;
    private javax.swing.JLabel jlRazaoOC;
    private javax.swing.JPanel jpInfoFornecedorOC;
    private javax.swing.JPanel jpInfoProdutosOC;
    private javax.swing.JPanel jpItensCompraOC;
    private javax.swing.JTextField jtCodBarrasOC;
    private javax.swing.JTextField jtDescricaoOC;
    private javax.swing.JTable jtItensCompraOC;
    private javax.swing.JTextField jtQuantidadeOC;
    private javax.swing.JTextField jtRazaoOC;
    private javax.swing.JTextField jtfCodigoDaOrdem;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the listaDeFornecedores
     */
    public List<Fornecedor> getListaDeFornecedores() {
        return listaDeFornecedores;
    }

    /**
     * @param listaDeFornecedores the listaDeFornecedores to set
     */
    public void setListaDeFornecedores(List<Fornecedor> listaDeFornecedores) {
        this.listaDeFornecedores = listaDeFornecedores;
    }

    /**
     * @return the listaDeOrdensDeCompra
     */
    public List<OrdemDeCompra> getListaDeOrdensDeCompra() {
        return listaDeOrdensDeCompra;
    }

    /**
     * @param listaDeOrdensDeCompra the listaDeOrdensDeCompra to set
     */
    public void setListaDeOrdensDeCompra(List<OrdemDeCompra> listaDeOrdensDeCompra) {
        this.listaDeOrdensDeCompra = listaDeOrdensDeCompra;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jbAdicionarOC
     */
    public javax.swing.JButton getJbAdicionarOC() {
        return jbAdicionarOC;
    }

    /**
     * @param jbAdicionarOC the jbAdicionarOC to set
     */
    public void setJbAdicionarOC(javax.swing.JButton jbAdicionarOC) {
        this.jbAdicionarOC = jbAdicionarOC;
    }

    /**
     * @return the jbFinalizarCompraOC
     */
    public javax.swing.JButton getJbFinalizarCompraOC() {
        return jbFinalizarCompraOC;
    }

    /**
     * @param jbFinalizarCompraOC the jbFinalizarCompraOC to set
     */
    public void setJbFinalizarCompraOC(javax.swing.JButton jbFinalizarCompraOC) {
        this.jbFinalizarCompraOC = jbFinalizarCompraOC;
    }

    /**
     * @return the jbLimparOC2
     */
    public javax.swing.JButton getJbLimparOC2() {
        return jbLimparOC2;
    }

    /**
     * @param jbLimparOC2 the jbLimparOC2 to set
     */
    public void setJbLimparOC2(javax.swing.JButton jbLimparOC2) {
        this.jbLimparOC2 = jbLimparOC2;
    }

    /**
     * @return the jbOkOC
     */
    public javax.swing.JButton getJbOkOC() {
        return jbOkOC;
    }

    /**
     * @param jbOkOC the jbOkOC to set
     */
    public void setJbOkOC(javax.swing.JButton jbOkOC) {
        this.jbOkOC = jbOkOC;
    }

    /**
     * @return the jbSairOC
     */
    public javax.swing.JButton getJbSairOC() {
        return jbSairOC;
    }

    /**
     * @param jbSairOC the jbSairOC to set
     */
    public void setJbSairOC(javax.swing.JButton jbSairOC) {
        this.jbSairOC = jbSairOC;
    }

    /**
     * @return the jlCodBarrasOC
     */
    public javax.swing.JLabel getJlCodBarrasOC() {
        return jlCodBarrasOC;
    }

    /**
     * @param jlCodBarrasOC the jlCodBarrasOC to set
     */
    public void setJlCodBarrasOC(javax.swing.JLabel jlCodBarrasOC) {
        this.jlCodBarrasOC = jlCodBarrasOC;
    }

    /**
     * @return the jlDescricaoOC
     */
    public javax.swing.JLabel getJlDescricaoOC() {
        return jlDescricaoOC;
    }

    /**
     * @param jlDescricaoOC the jlDescricaoOC to set
     */
    public void setJlDescricaoOC(javax.swing.JLabel jlDescricaoOC) {
        this.jlDescricaoOC = jlDescricaoOC;
    }

    /**
     * @return the jlQuantidadeOC
     */
    public javax.swing.JLabel getJlQuantidadeOC() {
        return jlQuantidadeOC;
    }

    /**
     * @param jlQuantidadeOC the jlQuantidadeOC to set
     */
    public void setJlQuantidadeOC(javax.swing.JLabel jlQuantidadeOC) {
        this.jlQuantidadeOC = jlQuantidadeOC;
    }

    /**
     * @return the jlRazaoOC
     */
    public javax.swing.JLabel getJlRazaoOC() {
        return jlRazaoOC;
    }

    /**
     * @param jlRazaoOC the jlRazaoOC to set
     */
    public void setJlRazaoOC(javax.swing.JLabel jlRazaoOC) {
        this.jlRazaoOC = jlRazaoOC;
    }

    /**
     * @return the jpInfoFornecedorOC
     */
    public javax.swing.JPanel getJpInfoFornecedorOC() {
        return jpInfoFornecedorOC;
    }

    /**
     * @param jpInfoFornecedorOC the jpInfoFornecedorOC to set
     */
    public void setJpInfoFornecedorOC(javax.swing.JPanel jpInfoFornecedorOC) {
        this.jpInfoFornecedorOC = jpInfoFornecedorOC;
    }

    /**
     * @return the jpInfoProdutosOC
     */
    public javax.swing.JPanel getJpInfoProdutosOC() {
        return jpInfoProdutosOC;
    }

    /**
     * @param jpInfoProdutosOC the jpInfoProdutosOC to set
     */
    public void setJpInfoProdutosOC(javax.swing.JPanel jpInfoProdutosOC) {
        this.jpInfoProdutosOC = jpInfoProdutosOC;
    }

    /**
     * @return the jpItensCompraOC
     */
    public javax.swing.JPanel getJpItensCompraOC() {
        return jpItensCompraOC;
    }

    /**
     * @param jpItensCompraOC the jpItensCompraOC to set
     */
    public void setJpItensCompraOC(javax.swing.JPanel jpItensCompraOC) {
        this.jpItensCompraOC = jpItensCompraOC;
    }

    /**
     * @return the jtCodBarrasOC
     */
    public javax.swing.JTextField getJtCodBarrasOC() {
        return jtCodBarrasOC;
    }

    /**
     * @param jtCodBarrasOC the jtCodBarrasOC to set
     */
    public void setJtCodBarrasOC(javax.swing.JTextField jtCodBarrasOC) {
        this.jtCodBarrasOC = jtCodBarrasOC;
    }

    /**
     * @return the jtDescricaoOC
     */
    public javax.swing.JTextField getJtDescricaoOC() {
        return jtDescricaoOC;
    }

    /**
     * @param jtDescricaoOC the jtDescricaoOC to set
     */
    public void setJtDescricaoOC(javax.swing.JTextField jtDescricaoOC) {
        this.jtDescricaoOC = jtDescricaoOC;
    }

    /**
     * @return the jtItensCompraOC
     */
    public javax.swing.JTable getJtItensCompraOC() {
        return jtItensCompraOC;
    }

    /**
     * @param jtItensCompraOC the jtItensCompraOC to set
     */
    public void setJtItensCompraOC(javax.swing.JTable jtItensCompraOC) {
        this.jtItensCompraOC = jtItensCompraOC;
    }

    /**
     * @return the jtQuantidadeOC
     */
    public javax.swing.JTextField getJtQuantidadeOC() {
        return jtQuantidadeOC;
    }

    /**
     * @param jtQuantidadeOC the jtQuantidadeOC to set
     */
    public void setJtQuantidadeOC(javax.swing.JTextField jtQuantidadeOC) {
        this.jtQuantidadeOC = jtQuantidadeOC;
    }

    /**
     * @return the jtRazaoOC
     */
    public javax.swing.JTextField getJtRazaoOC() {
        return jtRazaoOC;
    }

    /**
     * @param jtRazaoOC the jtRazaoOC to set
     */
    public void setJtRazaoOC(javax.swing.JTextField jtRazaoOC) {
        this.jtRazaoOC = jtRazaoOC;
    }

    /**
     * @return the jftCnpjOC
     */
    public javax.swing.JFormattedTextField getJftCnpjOC() {
        return jftCnpjOC;
    }

    /**
     * @param jftCnpjOC the jftCnpjOC to set
     */
    public void setJftCnpjOC(javax.swing.JFormattedTextField jftCnpjOC) {
        this.jftCnpjOC = jftCnpjOC;
    }

    /**
     * @return the jlCnpjOC
     */
    public javax.swing.JLabel getJlCnpjOC() {
        return jlCnpjOC;
    }

    /**
     * @param jlCnpjOC the jlCnpjOC to set
     */
    public void setJlCnpjOC(javax.swing.JLabel jlCnpjOC) {
        this.jlCnpjOC = jlCnpjOC;
    }

    /**
     * @return the jlCodigoDaOrdem
     */
    public javax.swing.JLabel getJlCodigoDaOrdem() {
        return jlCodigoDaOrdem;
    }

    /**
     * @param jlCodigoDaOrdem the jlCodigoDaOrdem to set
     */
    public void setJlCodigoDaOrdem(javax.swing.JLabel jlCodigoDaOrdem) {
        this.jlCodigoDaOrdem = jlCodigoDaOrdem;
    }

    /**
     * @return the jtfCodigoDaOrdem
     */
    public javax.swing.JTextField getJtfCodigoDaOrdem() {
        return jtfCodigoDaOrdem;
    }

    /**
     * @param jtfCodigoDaOrdem the jtfCodigoDaOrdem to set
     */
    public void setJtfCodigoDaOrdem(javax.swing.JTextField jtfCodigoDaOrdem) {
        this.jtfCodigoDaOrdem = jtfCodigoDaOrdem;
    }

    /**
     * @return the umaOrdem
     */
    public OrdemDeCompra getUmaOrdem() {
        return umaOrdem;
    }

    /**
     * @param umaOrdem the umaOrdem to set
     */
    public void setUmaOrdem(OrdemDeCompra umaOrdem) {
        this.umaOrdem = umaOrdem;
    }

    /**
     * @return the listaDePecas
     */
    public ArrayList<Peca> getListaDePecas() {
        return listaDePecas;
    }

    /**
     * @param listaDePecas the listaDePecas to set
     */
    public void setListaDePecas(ArrayList<Peca> listaDePecas) {
        this.listaDePecas = listaDePecas;
    }

    /**
     * @return the quantidadePorPeca
     */
    public List<Integer> getQuantidadePorPeca() {
        return quantidadePorPeca;
    }

    /**
     * @param quantidadePorPeca the quantidadePorPeca to set
     */
    public void setQuantidadePorPeca(List<Integer> quantidadePorPeca) {
        this.quantidadePorPeca = quantidadePorPeca;
    }

    /**
     * @return the vetorQuantidadePorPeca
     */
    public int[] getVetorQuantidadePorPeca() {
        return vetorQuantidadePorPeca;
    }

    /**
     * @param vetorQuantidadePorPeca the vetorQuantidadePorPeca to set
     */
    public void setVetorQuantidadePorPeca(int[] vetorQuantidadePorPeca) {
        this.vetorQuantidadePorPeca = vetorQuantidadePorPeca;
    }

    /**
     * @return the alterar
     */
    public boolean isAlterar() {
        return alterar;
    }

    /**
     * @param alterar the alterar to set
     */
    public void setAlterar(boolean alterar) {
        this.alterar = alterar;
    }

    /**
     * @return the jbEditar
     */
    public javax.swing.JButton getJbEditar() {
        return jbEditar;
    }

    /**
     * @param jbEditar the jbEditar to set
     */
    public void setJbEditar(javax.swing.JButton jbEditar) {
        this.jbEditar = jbEditar;
    }

    /**
     * @return the jbExcluir
     */
    public javax.swing.JButton getJbExcluir() {
        return jbExcluir;
    }

    /**
     * @param jbExcluir the jbExcluir to set
     */
    public void setJbExcluir(javax.swing.JButton jbExcluir) {
        this.jbExcluir = jbExcluir;
    }
}
