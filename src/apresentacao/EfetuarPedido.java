/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import modelo.Almoxarifado;
import modelo.Cliente;
import modelo.Peca;
import modelo.Pedido;
import controle.Rampa;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisson Jaques
 */
public class EfetuarPedido extends javax.swing.JInternalFrame {
   
    private List<Pedido> listaDePedidos;
    private List<Cliente> listaDeClientes;    
    private ArrayList<String> listaDePecas;
    private List<Integer> quantidadePorPeca;
    private int vetorQuantidadePorPeca[];
    private Pedido umPedido;
    private Rampa rampa;
    private Almoxarifado estoque;
    private boolean alterar;

    /**
     * Creates new form EfetuarPedido
     */
    public EfetuarPedido(List<Pedido> listaDePedidos, List<Cliente> listaDeClientes, Rampa rampa, Almoxarifado estoque) {
        this.listaDePedidos = listaDePedidos;
        this.listaDeClientes = listaDeClientes;
        this.rampa = rampa;
        this.estoque = estoque;
        umPedido = new Pedido();
        listaDePecas = new ArrayList<>();
        quantidadePorPeca = new ArrayList<>();
        alterar = false;
        initComponents();
    }

    private boolean validarDadosPedido() {

        boolean ret = true;

        if (getJftCnpjPD().getText().equals("  .   .   /    -  ")) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes à ordem de pedido.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
            getJftCnpjPD().requestFocus();
        }

        return ret;

    }
    
    private boolean validarDadosFinalizarPedido() {
        boolean ret = true;

        if (getJftCnpjPD().getText().equals("  .   .   /    -  ")) {
            ret = false;
        } else if (getJtItensPedidoPD().getRowCount() == 0) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes à ordem de compra.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
        }

        return ret;
    }
    
    private void limparCampos() {
        getJftCnpjPD().setText("");
        getJtRazaoPD().setText("");
        getJtfCodigoDoPedido().setText("");
        getJftCnpjPD().setEnabled(true);
        getJtfCodigoDoPedido().setEnabled(true);
        getJbOkPD().setEnabled(true);
        limparCamposPeca();
        limparTabelaPecas();
        listaDePecas = new ArrayList<>();
        quantidadePorPeca = new ArrayList<>();
    }
    
    private void limparCamposPeca() {
        getJtCodBarrasPD().setText("");
        getJtQuantidadePD().setText("");
        getJtCodBarrasPD().setEnabled(true);
        getJbEditar().setEnabled(false);
        getJbExcluir().setEnabled(false);
        getJtItensPedidoPD().setEnabled(true);
        getJtItensPedidoPD().getSelectionModel().removeSelectionInterval(0, getJtItensPedidoPD().getRowCount());
        alterar = false;
    }
    
    private void limparTabelaPecas() {
        DefaultTableModel model = (DefaultTableModel) getJtItensPedidoPD().getModel();
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jpInfoFornecedorOC = new javax.swing.JPanel();
        jlCnpjpPD = new javax.swing.JLabel();
        jlRazaoPD = new javax.swing.JLabel();
        jbOkPD = new javax.swing.JButton();
        jtRazaoPD = new javax.swing.JTextField();
        jftCnpjPD = new javax.swing.JFormattedTextField();
        jlCodigoDoPedido = new javax.swing.JLabel();
        jtfCodigoDoPedido = new javax.swing.JTextField();
        jpInfoProdutosOC = new javax.swing.JPanel();
        jlQuantidadeOC = new javax.swing.JLabel();
        jlCodBarrasPD = new javax.swing.JLabel();
        jbAdicionarPD = new javax.swing.JButton();
        jtCodBarrasPD = new javax.swing.JTextField();
        jtQuantidadePD = new javax.swing.JTextField();
        jbLimparPD2 = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jpItensCompraOC = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtItensPedidoPD = new javax.swing.JTable();
        jbSairPD = new javax.swing.JButton();
        jbFinalizarPedido = new javax.swing.JButton();
        jRelatorio = new javax.swing.JButton();

        jToggleButton1.setText("jToggleButton1");

        setIconifiable(true);
        setTitle("PEDIDO");
        setPreferredSize(new java.awt.Dimension(568, 645));

        jpInfoFornecedorOC.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES DO PEDIDO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jlCnpjpPD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCnpjpPD.setText("CNPJ Fornecedor:");

        jlRazaoPD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlRazaoPD.setText("Razão Social:");

        jbOkPD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbOkPD.setText("OK");
        jbOkPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbOkPDActionPerformed(evt);
            }
        });

        jtRazaoPD.setEnabled(false);
        jtRazaoPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtRazaoPDActionPerformed(evt);
            }
        });

        try {
            jftCnpjPD.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftCnpjPD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftCnpjPDFocusLost(evt);
            }
        });
        jftCnpjPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jftCnpjPDActionPerformed(evt);
            }
        });

        jlCodigoDoPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCodigoDoPedido.setText("Número do Pedido:");

        jtfCodigoDoPedido.setEnabled(false);
        jtfCodigoDoPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfCodigoDoPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInfoFornecedorOCLayout = new javax.swing.GroupLayout(jpInfoFornecedorOC);
        jpInfoFornecedorOC.setLayout(jpInfoFornecedorOCLayout);
        jpInfoFornecedorOCLayout.setHorizontalGroup(
            jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoFornecedorOCLayout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlRazaoPD)
                    .addComponent(jlCnpjpPD)
                    .addComponent(jlCodigoDoPedido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jftCnpjPD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtRazaoPD, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jtfCodigoDoPedido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoFornecedorOCLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbOkPD, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(209, 209, 209))
        );
        jpInfoFornecedorOCLayout.setVerticalGroup(
            jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoFornecedorOCLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCnpjpPD)
                    .addComponent(jftCnpjPD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlRazaoPD)
                    .addComponent(jtRazaoPD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpInfoFornecedorOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlCodigoDoPedido)
                    .addComponent(jtfCodigoDoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbOkPD)
                .addContainerGap())
        );

        jpInfoProdutosOC.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES PRODUTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jlQuantidadeOC.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlQuantidadeOC.setText("Quantidade:");

        jlCodBarrasPD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCodBarrasPD.setText("Codigo de Barras:");

        jbAdicionarPD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbAdicionarPD.setText("ADICIONAR");
        jbAdicionarPD.setEnabled(false);
        jbAdicionarPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbAdicionarPDActionPerformed(evt);
            }
        });

        jtCodBarrasPD.setEnabled(false);
        jtCodBarrasPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtCodBarrasPDActionPerformed(evt);
            }
        });

        jtQuantidadePD.setEnabled(false);

        jbLimparPD2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbLimparPD2.setText("LIMPAR");
        jbLimparPD2.setEnabled(false);
        jbLimparPD2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparPD2ActionPerformed(evt);
            }
        });

        jbEditar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbEditar.setText("EDITAR");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbExcluir.setText("EXCLUIR");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInfoProdutosOCLayout = new javax.swing.GroupLayout(jpInfoProdutosOC);
        jpInfoProdutosOC.setLayout(jpInfoProdutosOCLayout);
        jpInfoProdutosOCLayout.setHorizontalGroup(
            jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoProdutosOCLayout.createSequentialGroup()
                .addComponent(jbAdicionarPD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jlQuantidadeOC)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtQuantidadePD, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(104, 104, 104))
                    .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbLimparPD2)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpInfoProdutosOCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlCodBarrasPD)
                .addGap(12, 12, 12)
                .addComponent(jtCodBarrasPD, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpInfoProdutosOCLayout.setVerticalGroup(
            jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInfoProdutosOCLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlCodBarrasPD)
                        .addComponent(jtCodBarrasPD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlQuantidadeOC)
                        .addComponent(jtQuantidadePD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addGroup(jpInfoProdutosOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbAdicionarPD)
                    .addComponent(jbLimparPD2)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpItensCompraOC.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "ITENS DO PEDIDO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jtItensPedidoPD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO DE BARRAS", "QUANTIDADE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtItensPedidoPD.setEnabled(false);
        jtItensPedidoPD.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jtItensPedidoPDFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtItensPedidoPDFocusLost(evt);
            }
        });
        jtItensPedidoPD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtItensPedidoPDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtItensPedidoPD);

        jbSairPD.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbSairPD.setText("SAIR");
        jbSairPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSairPDActionPerformed(evt);
            }
        });

        jbFinalizarPedido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jbFinalizarPedido.setText("FINALIZAR PEDIDO");
        jbFinalizarPedido.setEnabled(false);
        jbFinalizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFinalizarPedidoActionPerformed(evt);
            }
        });

        jRelatorio.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jRelatorio.setText("RELATÓRIO");
        jRelatorio.setEnabled(false);
        jRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpItensCompraOCLayout = new javax.swing.GroupLayout(jpItensCompraOC);
        jpItensCompraOC.setLayout(jpItensCompraOCLayout);
        jpItensCompraOCLayout.setHorizontalGroup(
            jpItensCompraOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpItensCompraOCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(151, 151, 151)
                .addComponent(jbFinalizarPedido)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbSairPD)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpItensCompraOCLayout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jpItensCompraOCLayout.setVerticalGroup(
            jpItensCompraOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpItensCompraOCLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpItensCompraOCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbFinalizarPedido)
                    .addComponent(jbSairPD)
                    .addComponent(jRelatorio))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpItensCompraOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpInfoProdutosOC, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jpInfoFornecedorOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpInfoFornecedorOC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jpInfoProdutosOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpItensCompraOC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbOkPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbOkPDActionPerformed
        if (validarDadosPedido()) {
            getJtItensPedidoPD().setEnabled(true);
            getJftCnpjPD().setEnabled(false);
            getJtfCodigoDoPedido().setEnabled(false);
            getJbOkPD().setEnabled(false);
            getJtCodBarrasPD().setEnabled(true);
            getJtQuantidadePD().setEnabled(true);
            getJbAdicionarPD().setEnabled(true);
            getJbLimparPD2().setEnabled(true);

            Cliente cliente = new Cliente();
            String cnpj = getJftCnpjPD().getText();

            for (Cliente cliente1 : getListaDeClientes()) {
                if (cnpj.equals(cliente1.getCnpj())) {
                    cliente = cliente1;
                }
            }

            getUmPedido().setCliente(cliente);
        }
    }//GEN-LAST:event_jbOkPDActionPerformed

    private void jtRazaoPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtRazaoPDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtRazaoPDActionPerformed

    private void jftCnpjPDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftCnpjPDFocusLost
        String cnpj = getJftCnpjPD().getText();
        boolean controlador = false;
        for (Cliente cliente : getListaDeClientes()) {
            if (cliente.getCnpj().equals(cnpj)) {
                controlador = true;
                getJtRazaoPD().setText(cliente.getRazaoSocial());                
            }
        }
        if (!controlador) {
            if (!cnpj.equals("  .   .   /    -  ")) {
                JOptionPane.showMessageDialog(this, "Fornecedor inválido! Favor inserir um CNPJ cadastrado no sistema.", "CNPJ inválido", JOptionPane.ERROR_MESSAGE);
                getJftCnpjPD().requestFocus();
            }
        }
    }//GEN-LAST:event_jftCnpjPDFocusLost

    private void jftCnpjPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jftCnpjPDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jftCnpjPDActionPerformed

    private void jtfCodigoDoPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfCodigoDoPedidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfCodigoDoPedidoActionPerformed

    private void jbAdicionarPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbAdicionarPDActionPerformed
        if (validarDadosPedido()) {
            String peca = getJtCodBarrasPD().getText();
            getJbFinalizarPedido().setEnabled(true);
            
            int i = 0;
            int index = -1;
            for (String peca1 : getListaDePecas()) {
                if (peca1.equals(peca)) {
                    index = i;
                }
                i++;
            }

            if (index > -1) {
                if (!isAlterar()) {
                    JOptionPane.showMessageDialog(this, "Já existe uma peça com esse código de barras!", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    peca = getListaDePecas().get(index);
                }
            }

            int quantidade;

            try {
                quantidade = Integer.parseInt(getJtQuantidadePD().getText());
            } catch (NumberFormatException ex) {
                quantidade = 1;
            }

            DefaultTableModel model = (DefaultTableModel) getJtItensPedidoPD().getModel();

            String msg = "";
            if (!isAlterar()) {
                msg = "Peça adicionada com sucesso!";
                getListaDePecas().add(peca);
                getQuantidadePorPeca().add(quantidade);
                model.addRow(new Object[]{peca, quantidade});
            } else {
                msg = "Alteração cadastral da peça realizada com sucesso!";
                model.setValueAt(quantidade, index, 1);
            }

            JOptionPane.showMessageDialog(this, msg, "Confirmação", JOptionPane.INFORMATION_MESSAGE);
            limparCamposPeca();
            System.out.println(getListaDePecas());
        }
    }//GEN-LAST:event_jbAdicionarPDActionPerformed

    private void jbLimparPD2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparPD2ActionPerformed
        limparCamposPeca();
    }//GEN-LAST:event_jbLimparPD2ActionPerformed
    
    private void excluirPeca() {
        DefaultTableModel model = (DefaultTableModel) getJtItensPedidoPD().getModel();
        String codigoDeBarras = (String) model.getValueAt(getJtItensPedidoPD().getSelectedRow(), 0);

        int i = 0;
        int index = -1;
        for (String peca : getListaDePecas()) {

            if (peca.equals(codigoDeBarras)) {
                index = i;
            }
            i++;
        }

        if (index > -1) {
            getListaDePecas().remove(index);
            getQuantidadePorPeca().remove(index);
            model.removeRow(getJtItensPedidoPD().getSelectedRow());
            JOptionPane.showMessageDialog(this, "Peça excluída com sucesso!", "Confirmação de exclusão", JOptionPane.INFORMATION_MESSAGE);
            limparCamposPeca();
        }
    }

    private void alterarPeca() {
        DefaultTableModel model = (DefaultTableModel) getJtItensPedidoPD().getModel();
        String codigoDeBarras = (String) model.getValueAt(getJtItensPedidoPD().getSelectedRow(), 0);

        String peca = codigoDeBarras;

        int i = 0;
        int index = -1;
        for (String peca1 : getListaDePecas()) {
            if (peca1.equals(codigoDeBarras)) {
                index = i;
            }
            i++;
        }

        if (index > -1) {
            peca = getListaDePecas().get(index);
            preencherCampos(peca, index);
            alterar = true;
            getJbEditar().setEnabled(false);
            getJbExcluir().setEnabled(false);
            getJtItensPedidoPD().setEnabled(false);
        }
    }
    
    private void preencherCampos(String peca, int index) {
        getJtCodBarrasPD().setText(peca);
        getJtCodBarrasPD().setEnabled(false);
        getJtQuantidadePD().setText(getQuantidadePorPeca().get(index) + "");
    }
    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        alterarPeca();
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir a peça selecionada?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            excluirPeca();
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jtItensPedidoPDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtItensPedidoPDFocusGained
        if (getJtItensPedidoPD().getSelectedRow() > -1) {
            getJbEditar().setEnabled(true);
            getJbExcluir().setEnabled(true);
        }
    }//GEN-LAST:event_jtItensPedidoPDFocusGained

    private void jtItensPedidoPDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtItensPedidoPDFocusLost
        if (getJtItensPedidoPD().getSelectedRow() < 0) {
            getJbEditar().setEnabled(false);
            getJbExcluir().setEnabled(false);
        }
    }//GEN-LAST:event_jtItensPedidoPDFocusLost

    private void jtItensPedidoPDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtItensPedidoPDMouseClicked
        if (evt.getClickCount() == 2) {
            if (getJtItensPedidoPD().getSelectedRow() > - 1) {
                alterarPeca();
            }
        }
    }//GEN-LAST:event_jtItensPedidoPDMouseClicked

    private void jbSairPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSairPDActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo sair da ordem de pedido?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            limparCampos();
            getRampa().setCorredor(new ArrayList<>());
            getRampa().setReceptaculo(new ArrayList<>());
            getRampa().setCodigoProduto(new ArrayList<>());
            getRampa().setCodigoUPC(new ArrayList<>());
            dispose();
        }
    }//GEN-LAST:event_jbSairPDActionPerformed

    private void jbFinalizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFinalizarPedidoActionPerformed
        if (validarDadosFinalizarPedido()) {
            jRelatorio.setEnabled(true);
            getJbFinalizarPedido().setEnabled(false);
            getJftCnpjPD().setEnabled(false);
            getJtCodBarrasPD().setEnabled(false);
            getJtQuantidadePD().setEnabled(false);
            getJbAdicionarPD().setEnabled(false);
            getJbLimparPD2().setEnabled(false);
            int i = 0;
            setVetorQuantidadePorPeca(new int[getQuantidadePorPeca().size()]);
            for (Integer vetor : getQuantidadePorPeca()) {
                getVetorQuantidadePorPeca()[i] = vetor;
                i++;
            }
            getJtfCodigoDoPedido().setText(umPedido.getCodigoDoPedido()+"");
            getUmPedido().setPecasDoPedido(getListaDePecas());
            getUmPedido().setQuantidadePorPeca(getVetorQuantidadePorPeca());
            getListaDePedidos().add(umPedido.clone());
            System.out.println(umPedido.clone());
            ArrayList<String> corredorRampa = umPedido.colocarNaRampa();
            System.out.println("****Conteúdo do Vetor de Peças do Pedido****");
            System.out.println(corredorRampa);
            getRampa().setPecasDoPedido(corredorRampa);
            getRampa().setEstoque(estoque);
            getRampa().removePecasDoEstoque();
            System.out.println(getRampa().getListaDeBusca());
            JOptionPane.showMessageDialog(this, "Pedido registrado com sucesso!", "Confirmação de Registro de Pedido", JOptionPane.INFORMATION_MESSAGE);
            System.out.println(getListaDePedidos());
        }
    }//GEN-LAST:event_jbFinalizarPedidoActionPerformed

    private void jRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRelatorioActionPerformed
            ArrayList<String> corredor = getRampa().getCorredor();
            ArrayList<String> receptaculo = getRampa().getReceptaculo();
            ArrayList<String> codigoProduto = getRampa().getCodigoProduto();
            ArrayList<String> codigoUPC = getRampa().getCodigoUPC();
            TelaRelatorioPedido relatorio = new TelaRelatorioPedido(corredor,receptaculo,codigoProduto,codigoUPC);
            relatorio.preencherRelatorio();
            relatorio.setVisible(true);
    }//GEN-LAST:event_jRelatorioActionPerformed

    private void jtCodBarrasPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtCodBarrasPDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtCodBarrasPDActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jRelatorio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton jbAdicionarPD;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JButton jbFinalizarPedido;
    private javax.swing.JButton jbLimparPD2;
    private javax.swing.JButton jbOkPD;
    private javax.swing.JButton jbSairPD;
    private javax.swing.JFormattedTextField jftCnpjPD;
    private javax.swing.JLabel jlCnpjpPD;
    private javax.swing.JLabel jlCodBarrasPD;
    private javax.swing.JLabel jlCodigoDoPedido;
    private javax.swing.JLabel jlQuantidadeOC;
    private javax.swing.JLabel jlRazaoPD;
    private javax.swing.JPanel jpInfoFornecedorOC;
    private javax.swing.JPanel jpInfoProdutosOC;
    private javax.swing.JPanel jpItensCompraOC;
    private javax.swing.JTextField jtCodBarrasPD;
    private javax.swing.JTable jtItensPedidoPD;
    private javax.swing.JTextField jtQuantidadePD;
    private javax.swing.JTextField jtRazaoPD;
    private javax.swing.JTextField jtfCodigoDoPedido;
    // End of variables declaration//GEN-END:variables
     
    /**
     * @return the estoque
     */
    public Almoxarifado getEstoque() {
        return estoque;
    }

    /**
     * @param estoque the estoque to set
     */
    public void setEstoque(Almoxarifado estoque) {
        this.estoque = estoque;
    }
    
    /**
     * @return the rampa
     */
    public Rampa getRampa() {
        return rampa;
    }

    /**
     * @param rampa the rampa to set
     */
    public void setRampa(Rampa rampa) {
        this.rampa = rampa;
    }

    
    /**
     * @return the listaDePedidos
     */
    public List<Pedido> getListaDePedidos() {
        return listaDePedidos;
    }

    /**
     * @param listaDePedidos the listaDePedidos to set
     */
    public void setListaDePedidos(List<Pedido> listaDePedidos) {
        this.listaDePedidos = listaDePedidos;
    }

    /**
     * @return the listaDeClientes
     */
    public List<Cliente> getListaDeClientes() {
        return listaDeClientes;
    }

    /**
     * @param listaDeClientes the listaDeClientes to set
     */
    public void setListaDeClientes(List<Cliente> listaDeClientes) {
        this.listaDeClientes = listaDeClientes;
    }

    /**
     * @return the umPedido
     */
    public Pedido getUmPedido() {
        return umPedido;
    }

    /**
     * @param umPedido the umPedido to set
     */
    public void setUmPedido(Pedido umPedido) {
        this.umPedido = umPedido;
    }

    /**
     * @return the listaDePecas
     */
    public ArrayList<String> getListaDePecas() {
        return listaDePecas;
    }

    /**
     * @param listaDePecas the listaDePecas to set
     */
    public void setListaDePecas(ArrayList<String> listaDePecas) {
        this.listaDePecas = listaDePecas;
    }

    /**
     * @return the quantidadePorPeca
     */
    public List<Integer> getQuantidadePorPeca() {
        return quantidadePorPeca;
    }

    /**
     * @param quantidadePorPeca the quantidadePorPeca to set
     */
    public void setQuantidadePorPeca(List<Integer> quantidadePorPeca) {
        this.quantidadePorPeca = quantidadePorPeca;
    }

    /**
     * @return the vetorQuantidadePorPeca
     */
    public int[] getVetorQuantidadePorPeca() {
        return vetorQuantidadePorPeca;
    }

    /**
     * @param vetorQuantidadePorPeca the vetorQuantidadePorPeca to set
     */
    public void setVetorQuantidadePorPeca(int[] vetorQuantidadePorPeca) {
        this.vetorQuantidadePorPeca = vetorQuantidadePorPeca;
    }

    /**
     * @return the alterar
     */
    public boolean isAlterar() {
        return alterar;
    }

    /**
     * @param alterar the alterar to set
     */
    public void setAlterar(boolean alterar) {
        this.alterar = alterar;
    }

    /**
     * @return the jRelatorio
     */
    public javax.swing.JButton getjRelatorio() {
        return jRelatorio;
    }

    /**
     * @param jRelatorio the jRelatorio to set
     */
    public void setjRelatorio(javax.swing.JButton jRelatorio) {
        this.jRelatorio = jRelatorio;
    }

    /**
     * @return the jScrollPane1
     */
    public javax.swing.JScrollPane getjScrollPane1() {
        return jScrollPane1;
    }

    /**
     * @param jScrollPane1 the jScrollPane1 to set
     */
    public void setjScrollPane1(javax.swing.JScrollPane jScrollPane1) {
        this.jScrollPane1 = jScrollPane1;
    }

    /**
     * @return the jToggleButton1
     */
    public javax.swing.JToggleButton getjToggleButton1() {
        return jToggleButton1;
    }

    /**
     * @param jToggleButton1 the jToggleButton1 to set
     */
    public void setjToggleButton1(javax.swing.JToggleButton jToggleButton1) {
        this.jToggleButton1 = jToggleButton1;
    }

    /**
     * @return the jbAdicionarPD
     */
    public javax.swing.JButton getJbAdicionarPD() {
        return jbAdicionarPD;
    }

    /**
     * @param jbAdicionarPD the jbAdicionarPD to set
     */
    public void setJbAdicionarPD(javax.swing.JButton jbAdicionarPD) {
        this.jbAdicionarPD = jbAdicionarPD;
    }

    /**
     * @return the jbEditar
     */
    public javax.swing.JButton getJbEditar() {
        return jbEditar;
    }

    /**
     * @param jbEditar the jbEditar to set
     */
    public void setJbEditar(javax.swing.JButton jbEditar) {
        this.jbEditar = jbEditar;
    }

    /**
     * @return the jbExcluir
     */
    public javax.swing.JButton getJbExcluir() {
        return jbExcluir;
    }

    /**
     * @param jbExcluir the jbExcluir to set
     */
    public void setJbExcluir(javax.swing.JButton jbExcluir) {
        this.jbExcluir = jbExcluir;
    }

    /**
     * @return the jbFinalizarPedido
     */
    public javax.swing.JButton getJbFinalizarPedido() {
        return jbFinalizarPedido;
    }

    /**
     * @param jbFinalizarPedido the jbFinalizarPedido to set
     */
    public void setJbFinalizarPedido(javax.swing.JButton jbFinalizarPedido) {
        this.jbFinalizarPedido = jbFinalizarPedido;
    }

    /**
     * @return the jbLimparPD2
     */
    public javax.swing.JButton getJbLimparPD2() {
        return jbLimparPD2;
    }

    /**
     * @param jbLimparPD2 the jbLimparPD2 to set
     */
    public void setJbLimparPD2(javax.swing.JButton jbLimparPD2) {
        this.jbLimparPD2 = jbLimparPD2;
    }

    /**
     * @return the jbOkPD
     */
    public javax.swing.JButton getJbOkPD() {
        return jbOkPD;
    }

    /**
     * @param jbOkPD the jbOkPD to set
     */
    public void setJbOkPD(javax.swing.JButton jbOkPD) {
        this.jbOkPD = jbOkPD;
    }

    /**
     * @return the jbSairPD
     */
    public javax.swing.JButton getJbSairPD() {
        return jbSairPD;
    }

    /**
     * @param jbSairPD the jbSairPD to set
     */
    public void setJbSairPD(javax.swing.JButton jbSairPD) {
        this.jbSairPD = jbSairPD;
    }

    /**
     * @return the jftCnpjPD
     */
    public javax.swing.JFormattedTextField getJftCnpjPD() {
        return jftCnpjPD;
    }

    /**
     * @param jftCnpjPD the jftCnpjPD to set
     */
    public void setJftCnpjPD(javax.swing.JFormattedTextField jftCnpjPD) {
        this.jftCnpjPD = jftCnpjPD;
    }

    /**
     * @return the jlCnpjpPD
     */
    public javax.swing.JLabel getJlCnpjpPD() {
        return jlCnpjpPD;
    }

    /**
     * @param jlCnpjpPD the jlCnpjpPD to set
     */
    public void setJlCnpjpPD(javax.swing.JLabel jlCnpjpPD) {
        this.jlCnpjpPD = jlCnpjpPD;
    }

    /**
     * @return the jlCodBarrasPD
     */
    public javax.swing.JLabel getJlCodBarrasPD() {
        return jlCodBarrasPD;
    }

    /**
     * @param jlCodBarrasPD the jlCodBarrasPD to set
     */
    public void setJlCodBarrasPD(javax.swing.JLabel jlCodBarrasPD) {
        this.jlCodBarrasPD = jlCodBarrasPD;
    }

    /**
     * @return the jlCodigoDoPedido
     */
    public javax.swing.JLabel getJlCodigoDoPedido() {
        return jlCodigoDoPedido;
    }

    /**
     * @param jlCodigoDoPedido the jlCodigoDoPedido to set
     */
    public void setJlCodigoDoPedido(javax.swing.JLabel jlCodigoDoPedido) {
        this.jlCodigoDoPedido = jlCodigoDoPedido;
    }

    /**
     * @return the jlQuantidadeOC
     */
    public javax.swing.JLabel getJlQuantidadeOC() {
        return jlQuantidadeOC;
    }

    /**
     * @param jlQuantidadeOC the jlQuantidadeOC to set
     */
    public void setJlQuantidadeOC(javax.swing.JLabel jlQuantidadeOC) {
        this.jlQuantidadeOC = jlQuantidadeOC;
    }

    /**
     * @return the jlRazaoPD
     */
    public javax.swing.JLabel getJlRazaoPD() {
        return jlRazaoPD;
    }

    /**
     * @param jlRazaoPD the jlRazaoPD to set
     */
    public void setJlRazaoPD(javax.swing.JLabel jlRazaoPD) {
        this.jlRazaoPD = jlRazaoPD;
    }

    /**
     * @return the jpInfoFornecedorOC
     */
    public javax.swing.JPanel getJpInfoFornecedorOC() {
        return jpInfoFornecedorOC;
    }

    /**
     * @param jpInfoFornecedorOC the jpInfoFornecedorOC to set
     */
    public void setJpInfoFornecedorOC(javax.swing.JPanel jpInfoFornecedorOC) {
        this.jpInfoFornecedorOC = jpInfoFornecedorOC;
    }

    /**
     * @return the jpInfoProdutosOC
     */
    public javax.swing.JPanel getJpInfoProdutosOC() {
        return jpInfoProdutosOC;
    }

    /**
     * @param jpInfoProdutosOC the jpInfoProdutosOC to set
     */
    public void setJpInfoProdutosOC(javax.swing.JPanel jpInfoProdutosOC) {
        this.jpInfoProdutosOC = jpInfoProdutosOC;
    }

    /**
     * @return the jpItensCompraOC
     */
    public javax.swing.JPanel getJpItensCompraOC() {
        return jpItensCompraOC;
    }

    /**
     * @param jpItensCompraOC the jpItensCompraOC to set
     */
    public void setJpItensCompraOC(javax.swing.JPanel jpItensCompraOC) {
        this.jpItensCompraOC = jpItensCompraOC;
    }

    /**
     * @return the jtCodBarrasPD
     */
    public javax.swing.JTextField getJtCodBarrasPD() {
        return jtCodBarrasPD;
    }

    /**
     * @param jtCodBarrasPD the jtCodBarrasPD to set
     */
    public void setJtCodBarrasPD(javax.swing.JTextField jtCodBarrasPD) {
        this.jtCodBarrasPD = jtCodBarrasPD;
    }
  
    /**
     * @return the jtItensPedidoPD
     */
    public javax.swing.JTable getJtItensPedidoPD() {
        return jtItensPedidoPD;
    }

    /**
     * @param jtItensPedidoPD the jtItensPedidoPD to set
     */
    public void setJtItensPedidoPD(javax.swing.JTable jtItensPedidoPD) {
        this.jtItensPedidoPD = jtItensPedidoPD;
    }

    /**
     * @return the jtQuantidadePD
     */
    public javax.swing.JTextField getJtQuantidadePD() {
        return jtQuantidadePD;
    }

    /**
     * @param jtQuantidadePD the jtQuantidadePD to set
     */
    public void setJtQuantidadePD(javax.swing.JTextField jtQuantidadePD) {
        this.jtQuantidadePD = jtQuantidadePD;
    }

    /**
     * @return the jtRazaoPD
     */
    public javax.swing.JTextField getJtRazaoPD() {
        return jtRazaoPD;
    }

    /**
     * @param jtRazaoPD the jtRazaoPD to set
     */
    public void setJtRazaoPD(javax.swing.JTextField jtRazaoPD) {
        this.jtRazaoPD = jtRazaoPD;
    }

    /**
     * @return the jtfCodigoDoPedido
     */
    public javax.swing.JTextField getJtfCodigoDoPedido() {
        return jtfCodigoDoPedido;
    }

    /**
     * @param jtfCodigoDoPedido the jtfCodigoDoPedido to set
     */
    public void setJtfCodigoDoPedido(javax.swing.JTextField jtfCodigoDoPedido) {
        this.jtfCodigoDoPedido = jtfCodigoDoPedido;
    }
}
