/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package apresentacao;

import java.sql.SQLException;
import modelo.Fornecedor;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisson Jaques
 */
public class CadastroFornecedor extends javax.swing.JInternalFrame {

    private List<Fornecedor> listaDeFornecedores;
    private boolean alterar;

    /**
     * Creates new form CadastroFornecedor
     */
    public CadastroFornecedor(List<Fornecedor> listaDeFornecedores) {
        this.listaDeFornecedores = listaDeFornecedores;
        alterar = false;
        initComponents();
        preencherTabelaFornecedor();
    }

    private void preencherTabelaFornecedor() {
        if (!getListaDeFornecedores().isEmpty()) {

            DefaultTableModel model = (DefaultTableModel) getTbFornecedor().getModel();

            for (Fornecedor fornecedor : getListaDeFornecedores()) {
                model.addRow(new Object[]{fornecedor.getCnpj(), fornecedor.getRazaoSocial(), fornecedor.getEndereco(), fornecedor.getNumeroDeContato()});
            }

        }
    }

    private void limparCampos() {
        getJftCnpj().setText("");
        getJtRazaoSocial().setText("");
        getJtEndereco().setText("");
        getJftTel().setText("");
        getJftCnpj().setEnabled(true);
        getJbEditar().setEnabled(false);
        getJbExcluir().setEnabled(false);
        getTbFornecedor().setEnabled(true);
        getTbFornecedor().getSelectionModel().removeSelectionInterval(0, getTbFornecedor().getRowCount());
        alterar = false;
    }

    private boolean validarDados() {

        boolean ret = true;

        if (getJftCnpj().getText().equals("  .   .   /    -  ")) {
            ret = false;
        } else if (getJtRazaoSocial().getText().isEmpty()) {
            ret = false;
        } else if (getJtEndereco().getText().isEmpty()) {
            ret = false;
        } else if (getJftTel().getText().equals("(  )     -    ")) {
            ret = false;
        }

        if (!ret) {
            JOptionPane.showMessageDialog(this, "Favor preencher todos os campos referentes a fornecedor.", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
        }

        return ret;

    }

    /**
     * @param listaDeFornecedores the listaDeFornecedores to set
     */
    public void setListaDeFornecedores(List<Fornecedor> listaDeFornecedores) {
        this.listaDeFornecedores = listaDeFornecedores;
    }

    /**
     * @return the alterar
     */
    public boolean isAlterar() {
        return alterar;
    }

    /**
     * @param alterar the alterar to set
     */
    public void setAlterar(boolean alterar) {
        this.alterar = alterar;
    }

    /**
     * @return the listaDeFornecedores
     */
    public List<Fornecedor> getListaDeFornecedores() {
        return listaDeFornecedores;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpInformacoesFornecedor = new javax.swing.JPanel();
        jlRazaoSocial = new javax.swing.JLabel();
        jlCnpj = new javax.swing.JLabel();
        jlEndereco = new javax.swing.JLabel();
        jlTel = new javax.swing.JLabel();
        jtRazaoSocial = new javax.swing.JTextField();
        jtEndereco = new javax.swing.JTextField();
        jftCnpj = new javax.swing.JFormattedTextField();
        jftTel = new javax.swing.JFormattedTextField();
        jbCadastrar = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbExcluir = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jpTabelaFornecedor = new javax.swing.JPanel();
        spTabelaFornecedor = new javax.swing.JScrollPane();
        tbFornecedor = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setTitle("CADASTRO FORNECEDOR");

        jpInformacoesFornecedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "INFORMAÇÕES DO FORNECEDOR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jlRazaoSocial.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlRazaoSocial.setText("Razão Social:");

        jlCnpj.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlCnpj.setText("CNPJ:");

        jlEndereco.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlEndereco.setText("Endereço:");

        jlTel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jlTel.setText("TEL:");

        try {
            jftCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftCnpj.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftCnpjFocusLost(evt);
            }
        });

        try {
            jftTel.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) ####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jftTel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jftTelFocusLost(evt);
            }
        });

        jbCadastrar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbCadastrar.setText("Incluir");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });

        jbEditar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setEnabled(false);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });

        jbExcluir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbExcluir.setText("Excluir");
        jbExcluir.setEnabled(false);
        jbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExcluirActionPerformed(evt);
            }
        });

        jbCancelar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpInformacoesFornecedorLayout = new javax.swing.GroupLayout(jpInformacoesFornecedor);
        jpInformacoesFornecedor.setLayout(jpInformacoesFornecedorLayout);
        jpInformacoesFornecedorLayout.setHorizontalGroup(
            jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInformacoesFornecedorLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addComponent(jlRazaoSocial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpInformacoesFornecedorLayout.createSequentialGroup()
                .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpInformacoesFornecedorLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlEndereco)
                            .addComponent(jlCnpj))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpInformacoesFornecedorLayout.createSequentialGroup()
                                .addComponent(jftCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jlTel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jftTel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jtEndereco)))
                    .addGroup(jpInformacoesFornecedorLayout.createSequentialGroup()
                        .addComponent(jbCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbCancelar)))
                .addContainerGap())
        );
        jpInformacoesFornecedorLayout.setVerticalGroup(
            jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpInformacoesFornecedorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlRazaoSocial))
                .addGap(9, 9, 9)
                .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlEndereco)
                    .addComponent(jtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlTel)
                    .addComponent(jftCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlCnpj)
                    .addComponent(jftTel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpInformacoesFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbCadastrar)
                    .addComponent(jbEditar)
                    .addComponent(jbExcluir)
                    .addComponent(jbCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpTabelaFornecedor.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "CLIENTES", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        tbFornecedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CNPJ", "RAZAO SOCIAL", "ENDEREÇO", "TELEFONE"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbFornecedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tbFornecedorFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tbFornecedorFocusLost(evt);
            }
        });
        tbFornecedor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbFornecedorMouseClicked(evt);
            }
        });
        spTabelaFornecedor.setViewportView(tbFornecedor);

        javax.swing.GroupLayout jpTabelaFornecedorLayout = new javax.swing.GroupLayout(jpTabelaFornecedor);
        jpTabelaFornecedor.setLayout(jpTabelaFornecedorLayout);
        jpTabelaFornecedorLayout.setHorizontalGroup(
            jpTabelaFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spTabelaFornecedor, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jpTabelaFornecedorLayout.setVerticalGroup(
            jpTabelaFornecedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTabelaFornecedorLayout.createSequentialGroup()
                .addComponent(spTabelaFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jpInformacoesFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jpTabelaFornecedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpInformacoesFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpTabelaFornecedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo sair do Cadastro de Fornecedores?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            dispose();
        }
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
        if (getTbFornecedor().getSelectedRow() > -1) {
            alterarFornecedor();
        }
    }//GEN-LAST:event_jbEditarActionPerformed

    private void tbFornecedorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbFornecedorFocusGained
        if (getTbFornecedor().getSelectedRow() > -1) {
            getJbEditar().setEnabled(true);
            getJbExcluir().setEnabled(true);
        }
    }//GEN-LAST:event_tbFornecedorFocusGained

    private void tbFornecedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tbFornecedorFocusLost
        if (getTbFornecedor().getSelectedRow() < 0) {
            getJbEditar().setEnabled(false);
            getJbExcluir().setEnabled(false);
        }
    }//GEN-LAST:event_tbFornecedorFocusLost

    private void tbFornecedorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbFornecedorMouseClicked
        if (evt.getClickCount() == 2) {
            if (getTbFornecedor().getSelectedRow() > - 1) {
                alterarFornecedor();
            }
        }
    }//GEN-LAST:event_tbFornecedorMouseClicked

    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        if (validarDados()) {
            Fornecedor fornecedor = new Fornecedor();
            fornecedor.setCnpj(getJftCnpj().getText());

            int i = 0;
            int index = -1;
            for (Fornecedor fornecedor1 : getListaDeFornecedores()) {
                if (fornecedor1.getCnpj().equals(fornecedor.getCnpj())) {
                    index = i;
                }
                i++;
            }

            if (index > -1) {
                if (!alterar) {
                    JOptionPane.showMessageDialog(this, "Já existe um fornecedor com esse CNPJ!", "Mensagem de erro", JOptionPane.ERROR_MESSAGE);
                    return;
                } else {
                    fornecedor = getListaDeFornecedores().get(index);
                }
            }

            fornecedor.setRazaoSocial(getJtRazaoSocial().getText());
            fornecedor.setEndereco(getJtEndereco().getText());
            fornecedor.setNumeroDeContato(getJftTel().getText());

            DefaultTableModel model = (DefaultTableModel) getTbFornecedor().getModel();

            String msg = "";
            if (!alterar) {
                msg = "Fornecedor cadastrado com sucesso!";
                getListaDeFornecedores().add(fornecedor);
                try {
                    fornecedor.insertFornecedor();
                } catch (SQLException ex) {
                    Logger.getLogger(CadastroFornecedor.class.getName()).log(Level.SEVERE, null, ex);
                }
                model.addRow(new Object[]{fornecedor.getCnpj(), fornecedor.getRazaoSocial(), fornecedor.getEndereco(), fornecedor.getNumeroDeContato()});
            } else {
                msg = "Alteração cadastral do fornecedor realizada com sucesso!";
                model.setValueAt(fornecedor.getRazaoSocial(), index, 1);
                model.setValueAt(fornecedor.getEndereco(), index, 2);
                model.setValueAt(fornecedor.getNumeroDeContato(), index, 3);
            }

            JOptionPane.showMessageDialog(this, msg, "Confirmação", JOptionPane.INFORMATION_MESSAGE);

            limparCampos();
            System.out.println(getListaDeFornecedores());
        }
    }//GEN-LAST:event_jbCadastrarActionPerformed

    private void jbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExcluirActionPerformed
        int op = JOptionPane.showConfirmDialog(this, "Deseja mesmo excluir o fornecedor selecionado?", "Sair", JOptionPane.OK_CANCEL_OPTION);

        if (op == 0) {
            excluirFornecedor();
        }
    }//GEN-LAST:event_jbExcluirActionPerformed

    private void jftCnpjFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftCnpjFocusLost
       if ("  .   .   /    -  ".equals(jftCnpj.getText())) {
            jftCnpj.setValue("");
        }
    }//GEN-LAST:event_jftCnpjFocusLost

    private void jftTelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jftTelFocusLost
        if ("(  )     -    ".equals(jftTel.getText())) {
            jftTel.setValue("");
        }
    }//GEN-LAST:event_jftTelFocusLost

    private void alterarFornecedor() {
        DefaultTableModel model = (DefaultTableModel) getTbFornecedor().getModel();
        String cnpj = (String) model.getValueAt(getTbFornecedor().getSelectedRow(), 0);

        Fornecedor fornecedor = new Fornecedor();
        fornecedor.setCnpj(cnpj);

        int i = 0;
        int index = -1;
        for (Fornecedor fornecedor1 : getListaDeFornecedores()) {
            if (fornecedor1.getCnpj().equals(cnpj)) {
                index = i;
            }
            i++;
        }

        if (index > -1) {
            fornecedor = getListaDeFornecedores().get(index);
            preencherCampos(fornecedor);
            fornecedor.updateFornecedor();
            alterar = true;
            getJbEditar().setEnabled(false);
            getJbExcluir().setEnabled(false);
            getTbFornecedor().setEnabled(false);
        }
    }

    private void excluirFornecedor() {
        DefaultTableModel model = (DefaultTableModel) getTbFornecedor().getModel();
        String cnpj = (String) model.getValueAt(getTbFornecedor().getSelectedRow(), 0);

        int i = 0;
        int index = -1;
        for (Fornecedor fornecedor : getListaDeFornecedores()) {
            if (fornecedor.getCnpj().equals(cnpj)) {
                index = i;
            }
            i++;
        }

        if (index > -1) {
            Fornecedor fornecedor = getListaDeFornecedores().get(index);
            getListaDeFornecedores().remove(index);
            fornecedor.deleteFornecedor();
            model.removeRow(getTbFornecedor().getSelectedRow());
            JOptionPane.showMessageDialog(this, "Fornecedor excluído com sucesso!", "Confirmação de exclusão", JOptionPane.INFORMATION_MESSAGE);
            limparCampos();
        }
    }

    private void preencherCampos(Fornecedor fornecedor) {
        getJftCnpj().setText(fornecedor.getCnpj());
        getJtRazaoSocial().setText(fornecedor.getRazaoSocial());
        getJtEndereco().setText(fornecedor.getEndereco());
        getJftTel().setText(fornecedor.getNumeroDeContato());
        getJftCnpj().setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbExcluir;
    private javax.swing.JFormattedTextField jftCnpj;
    private javax.swing.JFormattedTextField jftTel;
    private javax.swing.JLabel jlCnpj;
    private javax.swing.JLabel jlEndereco;
    private javax.swing.JLabel jlRazaoSocial;
    private javax.swing.JLabel jlTel;
    private javax.swing.JPanel jpInformacoesFornecedor;
    private javax.swing.JPanel jpTabelaFornecedor;
    private javax.swing.JTextField jtEndereco;
    private javax.swing.JTextField jtRazaoSocial;
    private javax.swing.JScrollPane spTabelaFornecedor;
    private javax.swing.JTable tbFornecedor;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the jbCadastrar
     */
    public javax.swing.JButton getJbCadastrar() {
        return jbCadastrar;
    }

    /**
     * @param jbCadastrar the jbCadastrar to set
     */
    public void setJbCadastrar(javax.swing.JButton jbCadastrar) {
        this.jbCadastrar = jbCadastrar;
    }

    /**
     * @return the jbCancelar
     */
    public javax.swing.JButton getJbCancelar() {
        return jbCancelar;
    }

    /**
     * @param jbCancelar the jbCancelar to set
     */
    public void setJbCancelar(javax.swing.JButton jbCancelar) {
        this.jbCancelar = jbCancelar;
    }

    /**
     * @return the jbEditar
     */
    public javax.swing.JButton getJbEditar() {
        return jbEditar;
    }

    /**
     * @param jbEditar the jbEditar to set
     */
    public void setJbEditar(javax.swing.JButton jbEditar) {
        this.jbEditar = jbEditar;
    }

    /**
     * @return the jbExcluir
     */
    public javax.swing.JButton getJbExcluir() {
        return jbExcluir;
    }

    /**
     * @param jbExcluir the jbExcluir to set
     */
    public void setJbExcluir(javax.swing.JButton jbExcluir) {
        this.jbExcluir = jbExcluir;
    }

    /**
     * @return the jftCnpj
     */
    public javax.swing.JFormattedTextField getJftCnpj() {
        return jftCnpj;
    }

    /**
     * @param jftCnpj the jftCnpj to set
     */
    public void setJftCnpj(javax.swing.JFormattedTextField jftCnpj) {
        this.jftCnpj = jftCnpj;
    }

    /**
     * @return the jftTel
     */
    public javax.swing.JFormattedTextField getJftTel() {
        return jftTel;
    }

    /**
     * @param jftTel the jftTel to set
     */
    public void setJftTel(javax.swing.JFormattedTextField jftTel) {
        this.jftTel = jftTel;
    }

    /**
     * @return the jlCnpj
     */
    public javax.swing.JLabel getJlCnpj() {
        return jlCnpj;
    }

    /**
     * @param jlCnpj the jlCnpj to set
     */
    public void setJlCnpj(javax.swing.JLabel jlCnpj) {
        this.jlCnpj = jlCnpj;
    }

    /**
     * @return the jlEndereco
     */
    public javax.swing.JLabel getJlEndereco() {
        return jlEndereco;
    }

    /**
     * @param jlEndereco the jlEndereco to set
     */
    public void setJlEndereco(javax.swing.JLabel jlEndereco) {
        this.jlEndereco = jlEndereco;
    }

    /**
     * @return the jlRazaoSocial
     */
    public javax.swing.JLabel getJlRazaoSocial() {
        return jlRazaoSocial;
    }

    /**
     * @param jlRazaoSocial the jlRazaoSocial to set
     */
    public void setJlRazaoSocial(javax.swing.JLabel jlRazaoSocial) {
        this.jlRazaoSocial = jlRazaoSocial;
    }

    /**
     * @return the jlTel
     */
    public javax.swing.JLabel getJlTel() {
        return jlTel;
    }

    /**
     * @param jlTel the jlTel to set
     */
    public void setJlTel(javax.swing.JLabel jlTel) {
        this.jlTel = jlTel;
    }

    /**
     * @return the jpInformacoesFornecedor
     */
    public javax.swing.JPanel getJpInformacoesFornecedor() {
        return jpInformacoesFornecedor;
    }

    /**
     * @param jpInformacoesFornecedor the jpInformacoesFornecedor to set
     */
    public void setJpInformacoesFornecedor(javax.swing.JPanel jpInformacoesFornecedor) {
        this.jpInformacoesFornecedor = jpInformacoesFornecedor;
    }

    /**
     * @return the jpTabelaFornecedor
     */
    public javax.swing.JPanel getJpTabelaFornecedor() {
        return jpTabelaFornecedor;
    }

    /**
     * @param jpTabelaFornecedor the jpTabelaFornecedor to set
     */
    public void setJpTabelaFornecedor(javax.swing.JPanel jpTabelaFornecedor) {
        this.jpTabelaFornecedor = jpTabelaFornecedor;
    }

    /**
     * @return the jtEndereco
     */
    public javax.swing.JTextField getJtEndereco() {
        return jtEndereco;
    }

    /**
     * @param jtEndereco the jtEndereco to set
     */
    public void setJtEndereco(javax.swing.JTextField jtEndereco) {
        this.jtEndereco = jtEndereco;
    }

    /**
     * @return the jtRazaoSocial
     */
    public javax.swing.JTextField getJtRazaoSocial() {
        return jtRazaoSocial;
    }

    /**
     * @param jtRazaoSocial the jtRazaoSocial to set
     */
    public void setJtRazaoSocial(javax.swing.JTextField jtRazaoSocial) {
        this.jtRazaoSocial = jtRazaoSocial;
    }

    /**
     * @return the spTabelaFornecedor
     */
    public javax.swing.JScrollPane getSpTabelaFornecedor() {
        return spTabelaFornecedor;
    }

    /**
     * @param spTabelaFornecedor the spTabelaFornecedor to set
     */
    public void setSpTabelaFornecedor(javax.swing.JScrollPane spTabelaFornecedor) {
        this.spTabelaFornecedor = spTabelaFornecedor;
    }

    /**
     * @return the tbFornecedor
     */
    public javax.swing.JTable getTbFornecedor() {
        return tbFornecedor;
    }

    /**
     * @param tbFornecedor the tbFornecedor to set
     */
    public void setTbFornecedor(javax.swing.JTable tbFornecedor) {
        this.tbFornecedor = tbFornecedor;
    }
}
